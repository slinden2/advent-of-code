const reverseString = (string) => {
  return string.split("").reverse().join("");
};

const getEdges = (tile) => {
  const result = [
    tile[0],
    tile[tile.length - 1],
    tile.map((x) => x[0]).join(""),
    tile.map((x) => x[x.length - 1]).join(""),
  ];
  return result.concat(result.map((r) => reverseString(r)));
};

const matchingTiles = (tile1, tile2) => {
  for (let i = 0; i < tile1.edges.length; i++) {
    const edge1 = tile1.edges[i];
    for (let j = 0; j < tile2.edges.length; j++) {
      const edge2 = tile2.edges[j];
      if (edge1 === edge2) {
        return edge1;
      }
    }
  }
  return null;
};

const solve1 = (input) => {
  const tiles = input
    .split("\n\n")
    .map((row) => row.split("\n"))
    .map((tile) => {
      const tileNum = parseInt(tile[0].slice(5, 9));
      const tileRows = tile.slice(1);
      const edges = getEdges(tileRows);
      return { id: tileNum, contents: tileRows, edges, matches: [] };
    });

  for (let i = 0; i < tiles.length; i++) {
    const tile1 = tiles[i];
    for (let j = i + 1; j < tiles.length; j++) {
      const tile2 = tiles[j];
      const match = matchingTiles(tile1, tile2);
      if (match) {
        tile1.matches.push({ id: tile2.id, edge: match });
        tile2.matches.push({ id: tile1.id, edge: match });
      }
    }
  }

  const result = tiles.reduce((acc, cur) => {
    if (cur.matches.length === 2) {
      acc *= cur.id;
    }
    return acc;
  }, 1);

  console.log(result);
};

const solve2 = (input) => {
  const groups = input.split(/\n{2,}/);

  const tiles = {};
  const edgeCandidates = {};

  // find edge candidates per tile
  for (const tileLines of groups) {
    const lines = tileLines.split(/\n/);
    const head = lines.shift();

    const id = /Tile (\d+):/.exec(head)[1];
    tiles[id] = { lines };

    tiles[id].possibleEdges = [];
    tiles[id].possibleEdges[0] = lines[0];
    tiles[id].possibleEdges[1] = lines.map((l) => l[0]).join("");
    tiles[id].possibleEdges[2] = lines.map((l) => l[l.length - 1]).join("");
    tiles[id].possibleEdges[3] = lines[lines.length - 1];

    for (let i = 0; i < 4; i++) {
      tiles[id].possibleEdges.push(
        [...tiles[id].possibleEdges[i]].reverse().join("")
      );
    }

    for (const edge of tiles[id].possibleEdges) {
      edgeCandidates[edge] = edgeCandidates[edge] || [];
      edgeCandidates[edge].push(id);
    }

    tiles[id].id = id;
    tiles[id].adjacent = [];
  }

  // count possible connections
  // collect adjacency data
  for (const [edge, ids] of Object.entries(edgeCandidates)) {
    if (ids.length === 1) {
      continue;
    }
    for (const id of ids) {
      tiles[id].connections = tiles[id].connections || 0;
      tiles[id].connections++;
    }
    tiles[ids[0]].adjacent.push({ t: tiles[ids[1]], e: edge });
    tiles[ids[1]].adjacent.push({ t: tiles[ids[0]], e: edge });
  }

  // collect edge tiles ids
  const edgeTiles = Object.values(tiles)
    .filter(({ id, connections }) => connections === 4)
    .map(({ id }) => id);

  // helpers
  function flipLines(lines) {
    for (const [k, line] of lines.entries()) {
      lines[k] = [...line].reverse().join("");
    }
  }

  function rotateLines(lines) {
    const oldLines = lines.map((l) => [...l]);
    const newLines = Array.from({ length: oldLines.length }, () =>
      Array.from({ length: oldLines.length }, () => "")
    );

    for (let j = oldLines.length - 1; j >= 0; j--) {
      for (let i = 0; i < oldLines.length; i++) {
        newLines[j][i] = oldLines[i][oldLines.length - j - 1];
      }
    }

    newLines.forEach((l, idx) => {
      lines[idx] = l.join("");
    });
  }

  // make map of tile ids
  const map = [];
  const availableIds = new Set(Object.keys(tiles));

  // place first edge tile
  {
    // based on the order of generated possible edges
    const flipIfEdge = [1, 3, 4, 6];
    // rotate to make connecting edge on top
    // all rotations are counter-clockwise
    const rotateIfEdge = [0, 1, 1, 2, 0, 3, 3, 2];

    map[0] = [edgeTiles[0]];
    const connectingEdgeString = tiles[map[0][0]].adjacent[0].e;
    const edgeStringNo = tiles[map[0][0]].possibleEdges.indexOf(
      connectingEdgeString
    );

    if (flipIfEdge.includes(edgeStringNo)) {
      flipLines(tiles[map[0][0]].lines);
    }
    // 3 extra rotations to make connecting edge on the right
    for (let r = 0; r < rotateIfEdge[edgeStringNo] + 3; r++) {
      rotateLines(tiles[map[0][0]].lines);
    }
  }
  availableIds.delete(map[0][0]);

  // last placed tile, py - line no, px - tile in line
  let px = 0;
  let py = 0;

  // place all remaining tiles
  {
    let isFirstLine = true;

    do {
      const rightEdgeString = tiles[map[py][px]].lines
        .map((l) => l[l.length - 1])
        .join("");
      const adj = tiles[map[py][px]].adjacent.find(({ t: tileCandidate }) => {
        if (!availableIds.has(tileCandidate.id)) return false;

        for (let i = 0; i < 4; i++) {
          const leftEdgeString = tileCandidate.lines.map((l) => l[0]).join("");
          if (rightEdgeString === leftEdgeString) return true;
          rotateLines(tileCandidate.lines);
        }
        flipLines(tileCandidate.lines);
        for (let i = 0; i < 4; i++) {
          const leftEdgeString = tileCandidate.lines.map((l) => l[0]).join("");
          if (rightEdgeString === leftEdgeString) return true;
          rotateLines(tileCandidate.lines);
        }
      });

      // if (!adj) return console.log("bad left step");

      availableIds.delete(adj.t.id);
      map[py][px + 1] = adj.t.id;

      // first line ends on edge tile
      // other lines end at first line length
      if (
        (isFirstLine && !edgeTiles.includes(adj.t.id)) ||
        map[py].length !== map[0].length
      ) {
        // not the end of the line
        px++;
        continue;
      }

      if (availableIds.size === 0) {
        // no more tiles
        break;
      }

      // line has ended, must place first tile on the next line
      {
        let bottomEdgeString =
          tiles[map[py][0]].lines[tiles[map[py][0]].lines.length - 1];
        let adj = tiles[map[py][0]].adjacent.find(({ t: tileCandidate }) => {
          if (!availableIds.has(tileCandidate.id)) return false;

          for (let i = 0; i < 4; i++) {
            const topEdgeString = tileCandidate.lines[0];
            if (bottomEdgeString === topEdgeString) return true;
            rotateLines(tileCandidate.lines);
          }
          flipLines(tileCandidate.lines);
          for (let i = 0; i < 4; i++) {
            const topEdgeString = tileCandidate.lines[0];
            if (bottomEdgeString === topEdgeString) return true;
            rotateLines(tileCandidate.lines);
          }
        });

        // first line may need to be entirely flipped for this to work
        if (!adj && isFirstLine) {
          map[0].forEach((id) => {
            tiles[id].lines.reverse();
          });

          bottomEdgeString =
            tiles[map[py][0]].lines[tiles[map[py][0]].lines.length - 1];
          adj = tiles[map[py][0]].adjacent.find(({ t: tileCandidate }) => {
            if (!availableIds.has(tileCandidate.id)) return false;

            for (let i = 0; i < 4; i++) {
              const topEdgeString = tileCandidate.lines[0];
              if (bottomEdgeString === topEdgeString) return true;
              rotateLines(tileCandidate.lines);
            }
            flipLines(tileCandidate.lines);
            for (let i = 0; i < 4; i++) {
              const topEdgeString = tileCandidate.lines[0];
              if (bottomEdgeString === topEdgeString) return true;
              rotateLines(tileCandidate.lines);
            }
          });
        }

        // if (!adj) return console.log("bad line step");

        availableIds.delete(adj.t.id);
        map[py + 1] = [adj.t.id];
        px = 0;
        py++;
        isFirstLine = false;
      }
    } while (true);
  }

  // make final image
  const image = [];
  const tileSizeForImage = tiles[map[0][0]].lines.length - 2;
  for (let i = 0; i < map.length; i++) {
    for (let j = 0; j < map[0].length; j++) {
      for (let k = 1; k <= tileSizeForImage; k++) {
        const line = tiles[map[i][j]].lines[k].substr(
          1,
          tiles[map[i][j]].lines[k].length - 2
        );

        image[i * tileSizeForImage + (k - 1)] =
          image[i * tileSizeForImage + (k - 1)] || "";
        image[i * tileSizeForImage + (k - 1)] =
          image[i * tileSizeForImage + (k - 1)] + line;
      }
    }
  }

  const pattern = [
    `                  # `, //
    `#    ##    ##    ###`, //
    ` #  #  #  #  #  #   `, //
  ];

  // offsets relative to first hash on second line in pattern
  const requiredHashesOffset = [];
  for (let i = 0; i < pattern.length; i++) {
    for (let j = 0; j < pattern[0].length; j++) {
      if (pattern[i][j] === "#") {
        requiredHashesOffset.push([i - 1, j]);
      }
    }
  }

  const imageSize = image.length;

  function countPatterns() {
    let res = 0;
    for (let i = 1; i < imageSize - 1; i++) {
      for (let j = 0; j < imageSize - pattern[0].length; j++) {
        res += requiredHashesOffset.every(
          (shift) => image[i + shift[0]][j + shift[1]] === "#"
        );
      }
    }
    return res;
  }

  // only one flip/rotate combo has patterns!
  let foundPatterns = 0;
  search: do {
    for (let i = 0; i < 4; i++) {
      if ((foundPatterns = countPatterns())) break search;
      rotateLines(image);
    }
    flipLines(image);
    for (let i = 0; i < 4; i++) {
      if ((foundPatterns = countPatterns())) break search;
      rotateLines(image);
    }
  } while (false);

  // result is number of hashes that don't belong to a pattern
  const hashesInPattern = [...pattern.join("")].filter((char) => char === "#")
    .length;
  const hashesInImage = [...image.join("")].filter((char) => char === "#")
    .length;
  console.log(hashesInImage - hashesInPattern * foundPatterns);
};

const inputExample = `Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...`;

const input = `Tile 3253:
###....#..
.#..##....
##.#.#.#.#
#.#.......
#....#...#
#.##...#..
....#.....
##.##.#..#
.###...##.
##.#...##.

Tile 2843:
...#.#.#..
##.....#.#
..#...#...
#.##.##...
#......###
#..#.#.###
........##
#.....##..
........#.
..##..###.

Tile 2557:
..##..#.#.
#.#......#
...#......
..........
.#....#..#
...#....##
####.....#
.##.##..#.
#..#......
#.#.##.#..

Tile 2543:
...#.#####
...#.....#
#..#.#....
.......#..
......#..#
#......#..
.#...#...#
##.#.#..##
#.#..#.#..
.#..####.#

Tile 3319:
#####..###
.#.#......
#.....#...
.....#...#
.#.#.....#
.....#...#
.##......#
##....#..#
##.#...#.#
.#....#..#

Tile 1607:
.##..#####
#....#..#.
.#..#.....
....#.....
...#.#..##
#..###...#
..#.#.....
..##.##.##
#...#..#.#
###..#.##.

Tile 3329:
#.#######.
#.#...###.
###......#
..........
#..#.#...#
#...##...#
#...##...#
##.#..#.#.
#..##.#...
......#.#.

Tile 2663:
#.#..##.#.
...#.....#
###..#....
..#.....#.
...#....##
.#.....#.#
..........
#..#......
####...#.#
###..#.#.#

Tile 1619:
####.#...#
.#....#..#
.......#.#
#.#....#..
#...#.#...
##........
##....#.#.
.#..###...
#..#...###
###.#.....

Tile 3779:
...#..#..#
.....#..#.
.#.....###
......#.#.
#....#...#
##.#.#..#.
...#......
#.........
..........
##.##.#...

Tile 3821:
.###.#...#
##.......#
..#..#.#..
.....#...#
...###..##
.#......#.
..#...#.#.
#...#....#
#.#..#...#
...###.##.

Tile 2749:
#.##.#..##
...#.##.#.
.....#...#
.......##.
..........
#.###.....
#...##...#
....#..###
#.#.##...#
#..#.#...#

Tile 1153:
##....####
..#..#...#
#..#..#...
.#.#...#..
#...##.##.
.....#....
..#..#..##
##....##..
#....#....
###..###..

Tile 3181:
#.#.##..#.
#...##....
....#.##.#
...#......
###.##....
.##.......
........##
....#..#.#
..##..#..#
#.##....#.

Tile 3491:
.#.....##.
..##..#...
.##...#...
##.....#..
##.....#..
..#...#.#.
#......#.#
#.......#.
#.##..##.#
..#...##..

Tile 1129:
#.##.#.#..
#.#..#.#.#
##........
##.....#.#
.#.......#
#........#
..###....#
.#......#.
.#....#..#
.#.#.#.###

Tile 3967:
##.#.#####
#....#...#
#####...#.
#.#....##.
.#...##.#.
#..#..#...
#..#......
.....#.#.#
........##
#....##..#

Tile 2131:
###.....#.
#..#.##...
#..#.##..#
##.....#..
..#.###.##
#........#
##........
...#.#....
##.....##.
.#....###.

Tile 1657:
###.#.#...
#..#.#...#
..........
..#....##.
.#...#....
##.#..##.#
#..#..##..
......#..#
.....#...#
#####.#.##

Tile 2521:
.##..###..
#.......##
.##......#
#...#.....
###...#..#
.......#.#
#.#..####.
#..#......
#.....#...
#.####....

Tile 1879:
...#####..
#...#.#...
....##.###
.......#..
#.....###.
##......#.
##....##..
#.....#..#
...#.#.#.#
.###.###..

Tile 2999:
.####.#..#
...#.....#
.......##.
#..#....#.
.....#.##.
#.....#..#
....#....#
#........#
...#.####.
.......##.

Tile 1091:
#####.####
##.#...##.
..#......#
....#.#...
#...###.##
#..#.#...#
........##
#.....##.#
##..#.##..
...##.#..#

Tile 3673:
..##.#..##
#....#..##
#.#.#....#
...#.....#
...#......
..#....#..
.#.....#..
..........
#.#.##.#.#
###.##..##

Tile 3727:
..#.#..#.#
##...##...
##........
..#..#.#.#
..##.#....
####.....#
....#....#
#..#.....#
#.#.......
.##.#..#.#

Tile 3089:
#.#.##..#.
.....#...#
##........
.#.#.###.#
.#....#..#
.....##...
.....##..#
..#.......
#.......#.
#...##.#.#

Tile 2819:
....##.#.#
#...#.#..#
......#..#
.#.#.#####
...##..#.#
........##
##..###...
.#.......#
..##...#..
..#.#.#.##

Tile 3023:
..#######.
....##..#.
..#.##....
##...##..#
#.##......
....#.....
##....#..#
.#...##..#
#.#..#....
#.##.###.#

Tile 2789:
###.##....
.##.....#.
.......#.#
....#.....
#..#.#....
.#........
#.........
..#.#....#
#........#
####..#...

Tile 3583:
..#####...
#....#..##
.#.#..#.#.
#..#.#....
#.#..###..
#.#.#.#...
#..#...#.#
#.......#.
#....#..##
....###...

Tile 1997:
..#.###..#
#...##....
###.###..#
####.##..#
####..##.#
##.#..##.#
#..#..###.
#.#.......
.#......##
#..#.#..#.

Tile 3691:
.#...#####
..##.##..#
##.#.#...#
#........#
#.#......#
...#......
#.#......#
..#...#.##
#.####...#
##..#.#...

Tile 1303:
#...#.#...
..#.......
........#.
#...###..#
#....#..#.
..........
#.........
#.##..##.#
#.#.....##
.....##...

Tile 2287:
.#.#.####.
......#...
#.###.....
##..#...#.
#..###...#
##.......#
.....#...#
#.#.....##
..###..#..
..###...#.

Tile 1733:
#######...
##..#....#
.....#....
#.##..##..
#...##.###
#.........
###......#
#.#.#.##.#
...#...#.#
##..#..##.

Tile 1097:
#.###..#..
#....#.#..
...###...#
.##.#.##..
#.#...#..#
...#...#.#
......##..
..#..#....
.....###.#
##....#.#.

Tile 1637:
..###.#...
##........
#..#......
###.##...#
##...##..#
#.........
#.........
#..#..##..
.......#..
.#..##.#..

Tile 3931:
.##.#.#.#.
##........
#...#...##
.##.....##
###....#.#
..##..##.#
#..#.#..##
#.##......
..#.......
...#....##

Tile 3463:
...#.##.#.
.#...#..#.
##....#...
#...#.###.
#.....#.##
#....###..
..####.#..
......##..
.###......
.##..#...#

Tile 2377:
.#.##.##.#
#....#.#.#
.........#
...#...#.#
#.#.......
#......#..
....#...#.
.....##..#
#.##..#..#
##..##.###

Tile 1249:
.##..#####
#........#
.#..#.#...
..#..#..##
##.####.#.
...##.#..#
#..##.....
.......##.
#...#....#
..#.#..#.#

Tile 3257:
#####..###
..........
.#....#..#
#...###...
.#......#.
#..#.#..##
#.....#.##
#..#.....#
.....#....
..#####.##

Tile 1693:
...####.#.
....#..#.#
...#....#.
...#.#.#.#
#....#....
..........
####....##
....##..##
..#...#.##
#.#####.##

Tile 3671:
###..#...#
.......#.#
.......#.#
##......#.
..#.....#.
.##....#.#
.##....#.#
#...#.####
....#..##.
.##...##.#

Tile 2531:
#...#.##..
...#.....#
##........
#.#......#
.#.####...
##........
.#..#.....
#....###.#
#.....#...
....###.#.

Tile 1553:
##.#....#.
.##.#..#..
#...#.##..
.#.#.#..#.
.........#
#....#....
..........
#.#...#..#
##....#...
.###.##...

Tile 1847:
.#.##..##.
......#...
.#.#..#...
...##....#
#.........
.#........
#...#.##.#
#...#..#.#
####.#....
####....#.

Tile 1423:
..###..##.
#.#.#.....
....##...#
#.#.##.###
.#....##.#
#......#.#
.....#...#
#..#.#.#..
##.....###
.....####.

Tile 3533:
##.##.#...
........##
..##..#..#
.#....#..#
..........
#.#......#
...#....#.
....#..#.#
....#..##.
##.#...###

Tile 1033:
##.##.#.#.
#.....####
..#....#.#
###....#.#
#....##.#.
#...#...##
#..#.#....
...#..#..#
##.#..##..
..#.....##

Tile 3413:
#.#.#.#.##
#....#....
...#......
.#..#.#.#.
#...#.....
......#..#
...#.#....
..#.#..#..
##..#.###.
.#####.##.

Tile 1123:
.#....####
#....##...
....#.....
...#..#.##
#....#..##
.##.#...#.
#.#.#.#...
#.#...#..#
##.#.....#
#.##.##.#.

Tile 2551:
###..##.#.
.#..#.##.#
.##.##.#..
.#...#..##
##.......#
.....#....
..#.##...#
.........#
.#.#.#..#.
.#.#.####.

Tile 3677:
.#.#.#.###
.#.#.#..##
#........#
..#.......
#.##.....#
......#..#
##........
#...##....
..##......
.####..###

Tile 3659:
#.#.#.#.##
...##.#...
...#.#.#.#
#..#..#...
###...#...
#.##.#..##
.##...#...
.###......
.#..##....
###.##.#.#

Tile 1103:
####..##.#
##.#.#....
#..#.#....
#...#.#...
##......##
..####.#..
..#..##.#.
.#.#.##...
..##.#.##.
#.#.######

Tile 1361:
#.....####
....##..#.
#...#.....
.........#
#.....#.#.
.....##..#
....####.#
...#....#.
#.....#...
#..##...#.

Tile 3527:
..###.##.#
##.......#
.#.....#.#
#..#.#.#..
#...#.....
#....#....
..#....#.#
.........#
....#....#
.#..######

Tile 1823:
.#####..##
#..#.##...
..##.#...#
#...#....#
....#....#
..#.#.#.##
..#.#....#
#.#....##.
...#.##.##
..#.#..##.

Tile 1559:
#....###.#
.###.#.#.#
#.#.......
#....##.##
#....#.#.#
#.#......#
.#...###..
##...#.##.
.##.#.####
.##..##...

Tile 2161:
#..#.####.
.......#.#
#........#
....#...##
#.#.#...#.
#..###...#
#.........
.#.....#.#
..##.#...#
.#.###.###

Tile 2633:
.#...#.###
..#.#....#
#.......##
#....#....
#.#....#.#
#.##....#.
...###..##
#...#...##
####...#..
.#..###.#.

Tile 2593:
##..#..#.#
#.....###.
#.#.......
##....#.#.
#...##.#.#
#.#..#..##
###...##..
..#......#
#.#.##....
#.#####..#

Tile 2917:
#####.....
#....#...#
..##...#.#
##.#.....#
....##.#.#
#.....#...
.....#.#.#
##...#.##.
..........
......###.

Tile 3881:
..#.....#.
......##..
#....#....
...#.###.#
##....#..#
#....#.#..
#....##...
#.....#...
.....#..##
##....#.##

Tile 1193:
#.###.#.#.
.#.##.###.
.######..#
##.##..#.#
#.....#.#.
..#.##.##.
.#.......#
..#......#
..........
.#.#####.#

Tile 2467:
#..#.#.###
#..#...#.#
...#####.#
#........#
#.#.....#.
.#..#...##
...#..##.#
..#..#...#
#..#......
..###...#.

Tile 2273:
##..####.#
..##.#.##.
..##....##
#.#......#
..#...#...
#.........
#.##....##
.#.#..#..#
#..##.....
#.##....#.

Tile 3191:
###...#.##
.......#..
#.#.#.#...
......#..#
...##...##
....#.##..
##.#..#.##
.......#..
#.....#.#.
...###....

Tile 2423:
..#..##.#.
#.......##
.#....#.##
#.#..##...
###.#####.
#.....#.#.
..##..##..
#.#......#
##........
#..#.#####

Tile 2719:
########..
#.#.#.#.#.
#....#..#.
........#.
.#..##.#..
.....##..#
..##...#.#
##.#......
#........#
..#...#..#

Tile 3467:
..#.#...#.
#....#..##
...#.#..##
.#...##..#
#.#.##...#
.........#
#..#..#..#
#....#..#.
#...##..#.
######..#.

Tile 3461:
#..##.#...
.#...##..#
#..#..#..#
#####.....
...#.###..
....###.#.
##.##.....
#.........
#.###.#...
##...##..#

Tile 1109:
.#.#.#....
...#..###.
......#...
#.........
#.#.......
#.#.#.####
.##..#.#.#
#......#..
#......###
#.###.....

Tile 2953:
##.##.##..
#....#...#
##..##...#
#..#.....#
........#.
#.....###.
##...#####
#.....#...
..#.#..###
...#.##.#.

Tile 2081:
##.#.##..#
#....#..##
###......#
##.......#
.#.#.#....
#.#.#....#
...#..#..#
....##....
..#..#..#.
#.####....

Tile 2141:
###..#.###
#.#..#..##
####....#.
.....#..##
......#.#.
..#.##...#
...##.##..
....#....#
......#..#
..#.####..

Tile 1523:
.#.##...#.
#..#..##..
#.#.......
......#.##
#.#.##.##.
#..##..#..
#.###.....
..##.##...
..#.....#.
.#####.###

Tile 2411:
##.###.###
#.#......#
...##....#
....##....
..#......#
.#.#..#...
##..#...#.
.....#.##.
#.......#.
#...#####.

Tile 1627:
..####.#.#
....#..#..
.##......#
.#..#...#.
##.......#
#.#.......
#.##......
.....#.#.#
#.#......#
####..#...

Tile 1489:
#....#.##.
.......#.#
##.....###
#.#...##.#
...#.....#
######...#
..#...####
...#...#..
.#.#.#.#..
#.##.#.##.

Tile 2371:
#.#.##.##.
...#......
.##.#.....
#.........
#....#...#
.##..#..#.
##.##.###.
.###...#.#
..#.....#.
#...#.###.

Tile 2221:
#..#.#.###
#.##..#.#.
.#.###..#.
#.#..#....
##.#...###
..#.##.#.#
..##.###..
..##.##.#.
....#..#..
#..###.#..

Tile 2861:
#.##.#.###
##..#.#...
#...#....#
##......##
#...#.##..
..##..#..#
.......#..
......#...
#..##..#..
.#..#...#.

Tile 2707:
.##.....##
#...###...
##..####.#
####....##
.#.#......
.##.#....#
.##.....##
##.#.....#
#.#.......
.##..#.#..

Tile 2083:
##...##...
..........
.........#
...#.....#
.....#.#..
...#..#...
#........#
.#.##..#.#
....###..#
##.#......

Tile 2621:
.#..#.#.##
##....##..
...#..#...
##.#.###.#
##.#..#.##
..#.....##
#.##..####
.##.##....
.......#.#
###...#..#

Tile 1993:
#...##.##.
..#.....##
.#........
......#..#
#.##....##
#.#.##...#
...#..#..#
#.#....#.#
.......#..
.###....#.

Tile 1439:
..##......
..#......#
..##..#..#
#...##.#.#
.....#...#
..#...#..#
##.#.####.
#....#....
..#...#..#
..#.#...#.

Tile 3863:
.#..###.##
.........#
##.##...#.
#...#..###
#...#....#
#.....#..#
#.....#..#
.#.##.#..#
##.....###
###..###.#

Tile 3203:
#......##.
##.....#.#
....##...#
....#...##
........##
..#......#
...##....#
#...##.#..
###...#..#
###.##....

Tile 2677:
..#.......
.#..#.....
.#..#..#.#
#.##....##
#...#...#.
#.......##
.#.....###
#.........
........##
....##...#

Tile 1069:
..##..#.#.
###.......
#.#....#..
.#....#.#.
##.....#..
#...#.....
.......#..
#........#
.........#
#..#...##.

Tile 1171:
..##.##.#.
#..#......
#...#....#
....##...#
.##......#
#......#.#
..###...#.
.####.####
.....#.#..
#.#..#...#

Tile 1049:
#.##.##..#
##.#..##..
..#...#...
..#.#.....
#.#......#
.....#.##.
#.#.######
...#.#....
#.....#..#
#...##.#..

Tile 2683:
#..#......
.#.#..####
#.#......#
#.#.......
##.....#.#
#....##...
.#.#.....#
##.......#
#...#.##..
.#####....

Tile 1213:
#.##..###.
...###.#.#
.#....#.##
#.....#...
...##.....
#.#.####.#
#.####..##
###.#.##..
#.#..#.##.
#..#.###..

Tile 1597:
#......###
#.#.##..##
...#####.#
######.#.#
...#.##.#.
........#.
....#....#
##......#.
.###..##.#
##..##...#

Tile 2909:
#.##......
#......##.
...#..#...
###.#..#..
#..#..#...
#....#...#
#......#..
.#........
.#.......#
.####.#...

Tile 1429:
####.#####
.........#
##.#...#.#
#..#..#...
..#...#.##
#..#......
##..#.....
..####...#
#..#..#...
#...#.##..

Tile 3877:
.#..#.#.#.
#..#......
###.##.##.
#.###.....
#.......##
##.#....##
...#......
#...##....
#.##...###
.#.#..###.

Tile 1019:
####.....#
#.#..#..##
#.....#...
.#......##
.........#
......#..#
...#.#.##.
#....#...#
......#..#
.###.#..#.

Tile 3637:
#.....#...
.#..##...#
.###..#...
#.#.#.....
..#....#..
#..#..#...
.#.......#
...#..##.#
#.#....#..
.#.#...##.

Tile 3301:
##.##...#.
.#.#.#....
........#.
#.#..#..#.
.#...###..
#....#.#..
..##......
....#....#
.#...#.###
##.##..###

Tile 2459:
######..##
...#..####
....##...#
...#.#.#..
....#..##.
...#..#...
#...##....
.......#..
#.#.......
#..###.###

Tile 1741:
#..#......
..#.......
.....#..#.
....#.#...
#...##....
#.#......#
##.......#
..#..#...#
.#..#...##
###..#.##.

Tile 3019:
###.#.###.
.##...#.##
#.....##..
#.....#..#
.#.#.#...#
.........#
#..##..##.
##...#...#
#...#.#...
..#.....#.

Tile 1789:
#...#.#.#.
.##..#.#..
...##.#.#.
#...#.#...
..#..#...#
..###....#
...#.#....
.#..#.#..#
.....#....
#...#####.

Tile 2207:
..####.##.
#.......##
.##..#....
..#.#.#..#
#....#####
.....#...#
#####.##..
.##...#..#
.#.#.#....
...####.##

Tile 1783:
..#.......
......#..#
#..#...#..
#.........
.........#
.#.......#
.##....##.
##.##.#...
.#.#....#.
.##.#..##.

Tile 1609:
#.##.#.###
...#...#..
#.#......#
#....#...#
.....#....
..........
...#.....#
###.......
#...#.#..#
#..#.#....

Tile 3011:
##.....#..
..#....#..
#..##.#...
......#...
.#.#.#.#.#
...#.##..#
#.#...#.##
.##.####.#
#.#...####
..##..####

Tile 3517:
#.####.##.
#....##..#
#.##..#..#
.....#...#
#..#......
#....#...#
.........#
#....#.###
......###.
#.#.#..##.

Tile 2969:
#....###.#
##..#...#.
.##..#...#
#.#....###
##.......#
#.#....#.#
.#.#...#.#
#....#.#..
##..#.....
#..#...###

Tile 1487:
#.......#.
......##..
......##..
###..#....
#..#......
#.#......#
##..##..##
#.##.....#
#.........
##.##.#.##

Tile 1201:
..#.#.##.#
..#.....#.
...#......
.....#.#.#
##....#.##
#....#.##.
###....##.
###....#.#
#....#.#.#
#.#..##.#.

Tile 3371:
.#.#...##.
#..#.#..#.
##.#..#..#
.......#..
#........#
.#..#.#...
..........
##........
.#........
...##..#.#

Tile 1367:
#..##.###.
..........
#......###
..#..#..#.
#.####....
...##...##
#.#......#
#.#.#.#..#
..##.####.
##.....#.#

Tile 2699:
##...#...#
#.#.#....#
.#..#..#.#
....###...
#.##.##.##
#..#......
##........
#..#...#.#
..........
##..#####.

Tile 3761:
##.##.#..#
#.#.....#.
..#.##...#
.........#
..#..#.###
.##..#...#
###.##..##
.#....#..#
#...##...#
...##.#.##

Tile 1697:
#...#.##.#
#..#.....#
...###....
#..#..#.#.
#........#
.....#....
#...####.#
##.#......
.#........
##.#...##.

Tile 3221:
#.##...##.
###.#...#.
.#..##.#..
.##.......
#.........
..........
.#####....
##.##.....
.....#..#.
#.##.#.#.#

Tile 1181:
..#.###.##
#.#.##.#.#
...#...#..
#....#.#.#
#..#.##..#
.####..#..
..........
.#.....#..
.......##.
.....#....

Tile 2617:
#..##.....
#.#..#..##
##.##....#
#.........
.....#....
#.#..#.##.
##.#.....#
..#..#.#.#
..#....#.#
..#..####.

Tile 3739:
##.#.#..#.
#.#....#..
.#..#..#.#
##...#.##.
.##.......
#.###.#.#.
#....#..##
..###..#.#
.#....##.#
#.###.#.#.

Tile 1867:
######.#..
...##....#
##.....##.
##.#..#.#.
#..#.#..#.
..#......#
#..#..##..
##...#..#.
.#.#.#.#.#
.##.###.#.

Tile 2777:
..#.##.#.#
..#..#....
...#....##
....####.#
.##.#..###
....##.##.
##....#..#
.....#....
#.....##..
#..##.##.#

Tile 2039:
....#####.
..#..##...
##......##
#..#...#.#
#.#....#.#
..#.....##
...#.#....
#..##.....
#..####.##
#.##.#..#.

Tile 3229:
##...####.
..#.#.#..#
#....#.#..
#.#..##..#
##..#.#...
...##....#
#...##.#.#
#..#.##...
..##...#..
......##..

Tile 1447:
#.###.##.#
#..#..#..#
.....###.#
.......#.#
#..#...##.
#..##..#..
##.##.#...
.###..#.##
.......#..
#..##...#.

Tile 1601:
########.#
##......##
###.##....
#####.....
..........
.........#
..#.#...#.
#...#.....
.###...#..
.##.##..##

Tile 2897:
##.#..#..#
##.......#
.##...#..#
###.#....#
##........
#..#.###..
.#..#.#..#
.#.##..#..
.##......#
.#.##..###

Tile 2549:
.#..#####.
##.......#
#....#...#
.##.###...
##.#.##..#
..#...#..#
...##...##
..#.....#.
.##.....##
##.#.###..

Tile 1667:
###...##.#
#....#...#
.##.#..#.#
.......###
#.......##
..#....#..
.........#
###...#..#
#.#.##.#.#
..#.#..#..

Tile 1327:
###....#.#
..#.#..#.#
##..#..#.#
#..#.##..#
.....#....
##..##.#..
..#......#
.#.#.....#
#.##.###..
.#....#.#.

Tile 3137:
....##.##.
..#.......
#.#.##...#
.#.......#
.##......#
##.#.....#
##.#.....#
###.#.#.#.
#.....#...
..##.#..##

Tile 1759:
#.....#.##
.#...#.#..
..#...#..#
#..#..#..#
#....##..#
..##....#.
#......###
#....#.#.#
#...###..#
###.#.##..

Tile 1747:
#..##....#
.....#...#
..#..#.#.#
.##......#
#.#......#
..#......#
##........
....#.....
#.#......#
##.#..#..#

Tile 1373:
.##....###
....#....#
.........#
.##....#.#
..........
..#.#....#
.##.....#.
.........#
.....#.#.#
#...#.#...

Tile 3313:
...##.#.#.
##..#.....
#...##...#
.#..#.....
...#..##..
#...#.####
#........#
......##.#
###..#..#.
..#.#.##..

Tile 2441:
..#.###.##
#.#..#.###
.##.#.##.#
....#.....
.#.....##.
....##.#.#
..........
..#....##.
.#..####..
#.#..###.#

Tile 3299:
#....#####
##....####
#........#
#..#......
#........#
.###.##...
.##.##.###
..#..#.#..
..###..#..
...#.#..#.

Tile 1061:
.....#...#
#..#...#..
#......##.
.##.....#.
###.....##
.........#
#...#.....
.#..##....
#..#.#..##
###.#....#

Tile 3833:
#.#.###.##
..........
.........#
....#.....
#...#....#
#....#.#..
.....##...
#.........
#.##...#..
##.##.#.#.`;

// solve1(inputExample);
// solve1(input);
// solve2(inputExample);
solve2(input);
